{"version":3,"sources":["images/scheduler.png","images/jsquiz.png","images/lookafteryourself3000.png","images/yummydescription.jpg","images/password.png","components/NavTabs.js","components/pages/home.js","components/pages/about.js","components/pages/contact.js","components/pages/portfolio.js","components/PortfolioContainer.js","App.js","reportWebVitals.js","index.js"],"names":["NavTabs","currentPage","handlePageChange","className","href","onClick","Home","rel","target","src","alt","About","Contact","useState","email","setEmail","firstName","setfirstName","lastName","setlastName","errorMessage","setErrorMessage","handleInputChange","e","inputType","name","inputValue","value","onChange","type","placeholder","preventDefault","Portfolio","link","repolink","Image1","require","default","Image2","Image3","Image4","Image5","projects","Row","xs","md","map","project","Col","Card","Img","variant","Body","Title","Text","info","Button","PortfolioContainer","setCurrentPage","page","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4b9e263.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/scheduler.7c16294f.png\";","export default __webpack_public_path__ + \"static/media/jsquiz.fececde8.png\";","export default __webpack_public_path__ + \"static/media/lookafteryourself3000.b876f155.png\";","export default __webpack_public_path__ + \"static/media/yummydescription.bdf0b7c5.jpg\";","export default __webpack_public_path__ + \"static/media/password.96258c4c.png\";","import React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage, handlePageChange }) {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <a\n          href=\"#home\"\n          onClick={() => handlePageChange('Home')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          className={currentPage === 'Home' ? 'nav-link active' : 'nav-link'}\n        >\n          Home\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#about\"\n          onClick={() => handlePageChange('About')}\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\n        >\n          About\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#portfolio\"\n          onClick={() => handlePageChange('Blog')}\n          // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Blog' ? 'nav-link active' : 'nav-link'}\n        >\n          Portfolio\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#contact\"\n          onClick={() => handlePageChange('Contact')}\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\n        >\n          Contact\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","import React from 'react';\n// import '../src/App.css';\n// import '../../images/github-logo.png'\nexport default function Home() {\n  return (\n    \n    <div className='home'>\n      <h1>Home Page</h1>\n      <p>\n        Hiya! Welcome to my portfolio!\n        Please have a look at this groovy react website and feel free to connect with me via \n        Linked, email or Github.\n        Looking forward to become freinds or a future employee! :)\n      </p>\n      <a href=\"https://www.linkedin.com/in/dana-alami-2b6b2815a/\"   rel=\"noopener noreferrer\"  target=\"_blank\" >    \n    <img src=\"https://github.com/DwinaTech/public-images/blob/main/linkedin-icon.png?raw=true\"  alt=\"LinkIn-icon\"/>  \n     </a>\n     <a href=\"https://github.com/Danaalami-cloud\"   rel=\"noopener noreferrer\"  target=\"_blank\" >    \n    <img src=\"https://pngimg.com/uploads/github/small/github_PNG58.png\"  alt=\"Github-icon\" /> \n     </a>\n    </div>\n    \n    \n    \n\n    \n  );\n}\n\n","import React from 'react';\n\nexport default function About() {\n  return (\n    <div className=\"about\">\n      <h1>About Page</h1>\n      <p>\n      Hello, I'm Dana Alami and I'm a gradute from the University of Manchester with an undegradute hons degree in Business and Management with Italian Language. \n      I'm taking a coding course and diving into the web development world as I've been interested by it for some time and wanted to challenge myself with something new to learn.\n\nI was born and raised in Jerusalem, Palestine and went to Manchester to study. I spent a year abroad in Bergamo, Italy as part of my course to expand my knowledge in Italian history and culture. \nI would love to get a job in Manchester and move there as I fell in love with the city and its people.\n      </p>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n// import './style.css';\n\n// Here we import a helper function that will check if the email is valid\n// import { checkPassword, validateEmail } from '../../utils/helpers';\n\nfunction Contact() {\n    \n  // Create state variables for the fields in the form\n  // We are also setting their initial values to an empty string\n  const [email, setEmail] = useState('');\n  const [firstName, setfirstName] = useState('');\n  const [lastName, setlastName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    // Based on the input type, we set the state of either email, username, and password\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'firstName') {\n      setfirstName(inputValue);\n    } else if (inputType === 'lastName') {\n      setlastName(inputValue);\n    } else  setErrorMessage (inputValue)\n    }\n  ;\n\n  const handleFormSubmit = (e) => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n\n    // First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\n    // if (!validateEmail(email)) {\n    //   setErrorMessage('Email is invalid');\n    //   // We want to exit out of this code block if something is wrong so that the user can correct it\n    //   return;\n    //   // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\n    // }\n    // if (!checkPassword(password)) {\n    //   setErrorMessage(\n    //     `Choose a more secure password for the account: ${userName}`\n    //   );\n    //   return;\n    // }\n    // alert(`Hello ${userName}`);\n\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\n    setfirstName('');\n    setlastName('');\n    setEmail('');\n  };\n\n  return (\n    <div className=\"contact\">\n      <p>Contact Me! {firstName}</p>\n      <p>Email: danaalami@msn.com</p>\n      <form className=\"form\">\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleInputChange}\n          type=\"email\"\n          placeholder=\"email\"\n        />\n        <input\n          value={lastName}\n          name=\"lastName\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"lastname\"\n        />\n        <input\n          value={firstName}\n          name=\"firstName\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"firstName\"\n        />\n        <button type=\"button\" onClick={handleFormSubmit}>Submit</button>\n      </form>\n      {errorMessage && (\n        <div>\n          <p className=\"error-text\">{errorMessage}</p>\n        </div>\n        \n      )}\n      \n    </div>\n    \n  );\n}\n\n\nexport default Contact;\n","import React, { useState } from \"react\";\nimport { Card, Col, Row , Button, Image} from \"react-bootstrap\"\nimport scheduler from '../../images/scheduler.png'\n import jsquiz from '../../images/jsquiz.png'\nimport lookafteryourself3000 from '../../images/lookafteryourself3000.png';\nimport yummydescription from '../../images/yummydescription.jpg';\nimport password from \"../../images/password.png\";\n\n\nconst Portfolio = () => {\n    const [projects, setProject] = useState ([{name:\"Work Scheduler\", link:\"https://danaalami-cloud.github.io/work-day-calendar-application/\",\n    repolink: \"https://github.com/Danaalami-cloud/work-day-calendar-application.git\", Image1:require(\"../../images/scheduler.png\").default,    \n}, {name:\"Yummy fridge\", link:\"https://danaalami-cloud.github.io/Yummy_Fridge/\",\nrepolink: \"https://github.com/Danaalami-cloud/Yummy_Fridge\", Image2:require(\"../../images/yummydescription.jpg\").default},\n{name:\"Lookaftetyourself3000\", link:\"https://lookafteryourself3000.herokuapp.com/\",\nrepolink: \"https://github.com/Danaalami-cloud/NoteApp\", Image3:require(\"../../images/lookafteryourself3000.png\").default},\n{name:\"JavaScript Quiz\", link:\"https://danaalami-cloud.github.io/javascript-code-quiz/\",\nrepolink: \"https://github.com/Danaalami-cloud/javascript-code-quiz\", Image4:require(\"../../images/jsquiz.png\").default},\n{name:\"Password Generator\", link:\"https://danaalami-cloud.github.io/week-3-random-password-generator/\",\nrepolink: \"https://github.com/Danaalami-cloud/week-3-random-password-generator\", Image5:require(\"../../images/password.png\").default},\n])\n// let names = ['jsquiz', 'lookafteryourself3000', 'password', 'scheduler', 'yummydescription'];\n\n//         let Images = names.map(names => {\n\n//             <img\n//             src=require(\"./images/schedular.png\").default\n//             alt = \"\"\n//                 className=\"img-responsive\" />\n//         });\n\n    return (\n<Row xs={1} md={2} className=\"g-4\">\n  {projects.map((project) => (\n    <Col>\n      <Card>\n        <Card.Img  src={ project.Image1 } variant=\"top\"   />\n        <Card.Img  src={ project.Image2} variant=\"top\"  />\n        <Card.Img  src={ project.Image3} variant=\"top\"   />\n        <Card.Img  src={ project.Image4} variant=\"top\"   />\n        <Card.Img  src={ project.Image5} variant=\"top\"   />\n        <Card.Body>\n          <Card.Title>{project.name}</Card.Title>\n          <Card.Text>\n            {project.info}\n          </Card.Text>\n          <Button href={project.link} target=\"_blank\">Deployed Link</Button>\n          <Button href={project.repolink} target=\"_blank\">Deployed Repo</Button>\n        </Card.Body>\n      </Card>\n    </Col>\n  ))}\n</Row> )\n}\n\n\nexport default Portfolio;\n","import React, { useState } from 'react';\nimport NavTabs from './NavTabs';\nimport Home from './pages/home';\nimport About from './pages/about';\nimport Contact from './pages/contact';\nimport Portfolio from './pages/portfolio';\n\nexport default function PortfolioContainer() {\n  const [currentPage, setCurrentPage] = useState('Home');\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Home') {\n      return <Home />;\n    }\n    if (currentPage === 'About') {\n      return <About />;\n    }\n    if (currentPage === 'Blog') {\n      return <Portfolio />;\n    }\n    return <Contact />;\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div>\n      {/* We are passing the currentPage from state and the function to update it */}\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n      {/* Here we are calling the renderPage method which will return a component  */}\n      {renderPage()}\n    </div>\n  );\n}\n","import React from \"react\";\nimport PortfolioContainer from \"./components/PortfolioContainer\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App () {\n  return (\n    <div className= \"App-theme\">\n    <PortfolioContainer />;\n    </div>\n  );\n}\n// const App = () => <PortfolioContainer />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}